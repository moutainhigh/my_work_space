<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ooteco.dao.mapper.LoanAllotVOMapper" >
  <resultMap id="BaseResultMap" type="com.ooteco.entity.loan.model.LoanAllotVO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
    <result column="loan_code" property="loanCode" jdbcType="VARCHAR" />
    <result column="sold_out_time" property="soldOutTime" jdbcType="TIMESTAMP" />
    <result column="user_code" property="userCode" jdbcType="VARCHAR" />
    <result column="loan_money" property="loanMoney" jdbcType="DECIMAL" />
    <result column="match_time" property="matchTime" jdbcType="TIMESTAMP" />
    <result column="start_date" property="startDate" jdbcType="DATE" />
    <result column="end_date" property="endDate" jdbcType="DATE" />
    <result column="finance_products_id" property="financeProductsId" jdbcType="INTEGER" />
    <result column="finance_code" property="financeCode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, create_date, modify_date, loan_code, sold_out_time, user_code, loan_money, match_time, 
    start_date, end_date, finance_products_id, finance_code
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ooteco.entity.loan.model.LoanAllotVOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ath_loan_allot
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ath_loan_allot
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ath_loan_allot
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ooteco.entity.loan.model.LoanAllotVOExample" >
    delete from ath_loan_allot
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ooteco.entity.loan.model.LoanAllotVO" >
    insert into ath_loan_allot (id, create_date, modify_date, 
      loan_code, sold_out_time, user_code, 
      loan_money, match_time, start_date, 
      end_date, finance_products_id, finance_code
      )
    values (#{id,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}, 
      #{loanCode,jdbcType=VARCHAR}, #{soldOutTime,jdbcType=TIMESTAMP}, #{userCode,jdbcType=VARCHAR}, 
      #{loanMoney,jdbcType=DECIMAL}, #{matchTime,jdbcType=TIMESTAMP}, #{startDate,jdbcType=DATE}, 
      #{endDate,jdbcType=DATE}, #{financeProductsId,jdbcType=INTEGER}, #{financeCode,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ooteco.entity.loan.model.LoanAllotVO" >
    insert into ath_loan_allot
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="modifyDate != null" >
        modify_date,
      </if>
      <if test="loanCode != null" >
        loan_code,
      </if>
      <if test="soldOutTime != null" >
        sold_out_time,
      </if>
      <if test="userCode != null" >
        user_code,
      </if>
      <if test="loanMoney != null" >
        loan_money,
      </if>
      <if test="matchTime != null" >
        match_time,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="financeProductsId != null" >
        finance_products_id,
      </if>
      <if test="financeCode != null" >
        finance_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="loanCode != null" >
        #{loanCode,jdbcType=VARCHAR},
      </if>
      <if test="soldOutTime != null" >
        #{soldOutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userCode != null" >
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="loanMoney != null" >
        #{loanMoney,jdbcType=DECIMAL},
      </if>
      <if test="matchTime != null" >
        #{matchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=DATE},
      </if>
      <if test="financeProductsId != null" >
        #{financeProductsId,jdbcType=INTEGER},
      </if>
      <if test="financeCode != null" >
        #{financeCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ooteco.entity.loan.model.LoanAllotVOExample" resultType="java.lang.Integer" >
    select count(*) from ath_loan_allot
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ath_loan_allot
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyDate != null" >
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loanCode != null" >
        loan_code = #{record.loanCode,jdbcType=VARCHAR},
      </if>
      <if test="record.soldOutTime != null" >
        sold_out_time = #{record.soldOutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userCode != null" >
        user_code = #{record.userCode,jdbcType=VARCHAR},
      </if>
      <if test="record.loanMoney != null" >
        loan_money = #{record.loanMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.matchTime != null" >
        match_time = #{record.matchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startDate != null" >
        start_date = #{record.startDate,jdbcType=DATE},
      </if>
      <if test="record.endDate != null" >
        end_date = #{record.endDate,jdbcType=DATE},
      </if>
      <if test="record.financeProductsId != null" >
        finance_products_id = #{record.financeProductsId,jdbcType=INTEGER},
      </if>
      <if test="record.financeCode != null" >
        finance_code = #{record.financeCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ath_loan_allot
    set id = #{record.id,jdbcType=BIGINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      loan_code = #{record.loanCode,jdbcType=VARCHAR},
      sold_out_time = #{record.soldOutTime,jdbcType=TIMESTAMP},
      user_code = #{record.userCode,jdbcType=VARCHAR},
      loan_money = #{record.loanMoney,jdbcType=DECIMAL},
      match_time = #{record.matchTime,jdbcType=TIMESTAMP},
      start_date = #{record.startDate,jdbcType=DATE},
      end_date = #{record.endDate,jdbcType=DATE},
      finance_products_id = #{record.financeProductsId,jdbcType=INTEGER},
      finance_code = #{record.financeCode,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ooteco.entity.loan.model.LoanAllotVO" >
    update ath_loan_allot
    <set >
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="loanCode != null" >
        loan_code = #{loanCode,jdbcType=VARCHAR},
      </if>
      <if test="soldOutTime != null" >
        sold_out_time = #{soldOutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userCode != null" >
        user_code = #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="loanMoney != null" >
        loan_money = #{loanMoney,jdbcType=DECIMAL},
      </if>
      <if test="matchTime != null" >
        match_time = #{matchTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="financeProductsId != null" >
        finance_products_id = #{financeProductsId,jdbcType=INTEGER},
      </if>
      <if test="financeCode != null" >
        finance_code = #{financeCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ooteco.entity.loan.model.LoanAllotVO" >
    update ath_loan_allot
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      loan_code = #{loanCode,jdbcType=VARCHAR},
      sold_out_time = #{soldOutTime,jdbcType=TIMESTAMP},
      user_code = #{userCode,jdbcType=VARCHAR},
      loan_money = #{loanMoney,jdbcType=DECIMAL},
      match_time = #{matchTime,jdbcType=TIMESTAMP},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      finance_products_id = #{financeProductsId,jdbcType=INTEGER},
      finance_code = #{financeCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>