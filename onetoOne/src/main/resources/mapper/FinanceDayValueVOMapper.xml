<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ooteco.dao.mapper.FinanceDayValueVOMapper" >
  <resultMap id="BaseResultMap" type="com.ooteco.entity.financeDayValue.model.FinanceDayValueVO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="time" property="time" jdbcType="DATE" />
    <result column="value" property="value" jdbcType="DECIMAL" />
    <result column="t_value" property="tValue" jdbcType="DECIMAL" />
    <result column="sum_price" property="sumPrice" jdbcType="DECIMAL" />
    <result column="sum_h_price" property="sumHPrice" jdbcType="DECIMAL" />
    <result column="range_value" property="rangeValue" jdbcType="DECIMAL" />
    <result column="forecast_net_amount" property="forecastNetAmount" jdbcType="DECIMAL" />
    <result column="practical_net_amount" property="practicalNetAmount" jdbcType="DECIMAL" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, time, value, t_value, sum_price, sum_h_price, range_value, forecast_net_amount, 
    practical_net_amount, type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ooteco.entity.financeDayValue.model.FinanceDayValueVOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from finance_day_value
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from finance_day_value
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from finance_day_value
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ooteco.entity.financeDayValue.model.FinanceDayValueVOExample" >
    delete from finance_day_value
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ooteco.entity.financeDayValue.model.FinanceDayValueVO" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into finance_day_value (time, value, t_value, 
      sum_price, sum_h_price, range_value, 
      forecast_net_amount, practical_net_amount, 
      type)
    values (#{time,jdbcType=DATE}, #{value,jdbcType=DECIMAL}, #{tValue,jdbcType=DECIMAL}, 
      #{sumPrice,jdbcType=DECIMAL}, #{sumHPrice,jdbcType=DECIMAL}, #{rangeValue,jdbcType=DECIMAL}, 
      #{forecastNetAmount,jdbcType=DECIMAL}, #{practicalNetAmount,jdbcType=DECIMAL}, 
      #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ooteco.entity.financeDayValue.model.FinanceDayValueVO" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into finance_day_value
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="time != null" >
        time,
      </if>
      <if test="value != null" >
        value,
      </if>
      <if test="tValue != null" >
        t_value,
      </if>
      <if test="sumPrice != null" >
        sum_price,
      </if>
      <if test="sumHPrice != null" >
        sum_h_price,
      </if>
      <if test="rangeValue != null" >
        range_value,
      </if>
      <if test="forecastNetAmount != null" >
        forecast_net_amount,
      </if>
      <if test="practicalNetAmount != null" >
        practical_net_amount,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="time != null" >
        #{time,jdbcType=DATE},
      </if>
      <if test="value != null" >
        #{value,jdbcType=DECIMAL},
      </if>
      <if test="tValue != null" >
        #{tValue,jdbcType=DECIMAL},
      </if>
      <if test="sumPrice != null" >
        #{sumPrice,jdbcType=DECIMAL},
      </if>
      <if test="sumHPrice != null" >
        #{sumHPrice,jdbcType=DECIMAL},
      </if>
      <if test="rangeValue != null" >
        #{rangeValue,jdbcType=DECIMAL},
      </if>
      <if test="forecastNetAmount != null" >
        #{forecastNetAmount,jdbcType=DECIMAL},
      </if>
      <if test="practicalNetAmount != null" >
        #{practicalNetAmount,jdbcType=DECIMAL},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ooteco.entity.financeDayValue.model.FinanceDayValueVOExample" resultType="java.lang.Integer" >
    select count(*) from finance_day_value
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update finance_day_value
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=DATE},
      </if>
      <if test="record.value != null" >
        value = #{record.value,jdbcType=DECIMAL},
      </if>
      <if test="record.tValue != null" >
        t_value = #{record.tValue,jdbcType=DECIMAL},
      </if>
      <if test="record.sumPrice != null" >
        sum_price = #{record.sumPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.sumHPrice != null" >
        sum_h_price = #{record.sumHPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.rangeValue != null" >
        range_value = #{record.rangeValue,jdbcType=DECIMAL},
      </if>
      <if test="record.forecastNetAmount != null" >
        forecast_net_amount = #{record.forecastNetAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.practicalNetAmount != null" >
        practical_net_amount = #{record.practicalNetAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update finance_day_value
    set id = #{record.id,jdbcType=INTEGER},
      time = #{record.time,jdbcType=DATE},
      value = #{record.value,jdbcType=DECIMAL},
      t_value = #{record.tValue,jdbcType=DECIMAL},
      sum_price = #{record.sumPrice,jdbcType=DECIMAL},
      sum_h_price = #{record.sumHPrice,jdbcType=DECIMAL},
      range_value = #{record.rangeValue,jdbcType=DECIMAL},
      forecast_net_amount = #{record.forecastNetAmount,jdbcType=DECIMAL},
      practical_net_amount = #{record.practicalNetAmount,jdbcType=DECIMAL},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ooteco.entity.financeDayValue.model.FinanceDayValueVO" >
    update finance_day_value
    <set >
      <if test="time != null" >
        time = #{time,jdbcType=DATE},
      </if>
      <if test="value != null" >
        value = #{value,jdbcType=DECIMAL},
      </if>
      <if test="tValue != null" >
        t_value = #{tValue,jdbcType=DECIMAL},
      </if>
      <if test="sumPrice != null" >
        sum_price = #{sumPrice,jdbcType=DECIMAL},
      </if>
      <if test="sumHPrice != null" >
        sum_h_price = #{sumHPrice,jdbcType=DECIMAL},
      </if>
      <if test="rangeValue != null" >
        range_value = #{rangeValue,jdbcType=DECIMAL},
      </if>
      <if test="forecastNetAmount != null" >
        forecast_net_amount = #{forecastNetAmount,jdbcType=DECIMAL},
      </if>
      <if test="practicalNetAmount != null" >
        practical_net_amount = #{practicalNetAmount,jdbcType=DECIMAL},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ooteco.entity.financeDayValue.model.FinanceDayValueVO" >
    update finance_day_value
    set time = #{time,jdbcType=DATE},
      value = #{value,jdbcType=DECIMAL},
      t_value = #{tValue,jdbcType=DECIMAL},
      sum_price = #{sumPrice,jdbcType=DECIMAL},
      sum_h_price = #{sumHPrice,jdbcType=DECIMAL},
      range_value = #{rangeValue,jdbcType=DECIMAL},
      forecast_net_amount = #{forecastNetAmount,jdbcType=DECIMAL},
      practical_net_amount = #{practicalNetAmount,jdbcType=DECIMAL},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>