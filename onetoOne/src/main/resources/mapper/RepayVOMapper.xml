<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ooteco.dao.mapper.RepayVOMapper" >
  <resultMap id="BaseResultMap" type="com.ooteco.entity.repay.model.RepayVO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="repayment_plan_id" property="repaymentPlanId" jdbcType="BIGINT" />
    <result column="loan_code" property="loanCode" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
    <result column="periods_time" property="periodsTime" jdbcType="INTEGER" />
    <result column="loan_start_date" property="loanStartDate" jdbcType="DATE" />
    <result column="repayment_date" property="repaymentDate" jdbcType="DATE" />
    <result column="real_repayment_date" property="realRepaymentDate" jdbcType="DATE" />
    <result column="principal" property="principal" jdbcType="DECIMAL" />
    <result column="real_principal" property="realPrincipal" jdbcType="DECIMAL" />
    <result column="interest" property="interest" jdbcType="DECIMAL" />
    <result column="service_charge" property="serviceCharge" jdbcType="DECIMAL" />
    <result column="consulting_fee" property="consultingFee" jdbcType="DECIMAL" />
    <result column="prepayment_service_charge" property="prepaymentServiceCharge" jdbcType="DECIMAL" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="is_valid" property="isValid" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, repayment_plan_id, loan_code, create_date, modify_date, periods_time, loan_start_date, 
    repayment_date, real_repayment_date, principal, real_principal, interest, service_charge, 
    consulting_fee, prepayment_service_charge, type, status, is_valid
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ooteco.entity.repay.model.RepayVOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ath_repay
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ath_repay
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ath_repay
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ooteco.entity.repay.model.RepayVOExample" >
    delete from ath_repay
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ooteco.entity.repay.model.RepayVO" >
    insert into ath_repay (id, repayment_plan_id, loan_code, 
      create_date, modify_date, periods_time, 
      loan_start_date, repayment_date, real_repayment_date, 
      principal, real_principal, interest, 
      service_charge, consulting_fee, prepayment_service_charge, 
      type, status, is_valid)
    values (#{id,jdbcType=BIGINT}, #{repaymentPlanId,jdbcType=BIGINT}, #{loanCode,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}, #{periodsTime,jdbcType=INTEGER}, 
      #{loanStartDate,jdbcType=DATE}, #{repaymentDate,jdbcType=DATE}, #{realRepaymentDate,jdbcType=DATE}, 
      #{principal,jdbcType=DECIMAL}, #{realPrincipal,jdbcType=DECIMAL}, #{interest,jdbcType=DECIMAL}, 
      #{serviceCharge,jdbcType=DECIMAL}, #{consultingFee,jdbcType=DECIMAL}, #{prepaymentServiceCharge,jdbcType=DECIMAL}, 
      #{type,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{isValid,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.ooteco.entity.repay.model.RepayVO" useGeneratedKeys="true" keyProperty="id">
    insert into ath_repay
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="repaymentPlanId != null" >
        repayment_plan_id,
      </if>
      <if test="loanCode != null" >
        loan_code,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="modifyDate != null" >
        modify_date,
      </if>
      <if test="periodsTime != null" >
        periods_time,
      </if>
      <if test="loanStartDate != null" >
        loan_start_date,
      </if>
      <if test="repaymentDate != null" >
        repayment_date,
      </if>
      <if test="realRepaymentDate != null" >
        real_repayment_date,
      </if>
      <if test="principal != null" >
        principal,
      </if>
      <if test="realPrincipal != null" >
        real_principal,
      </if>
      <if test="interest != null" >
        interest,
      </if>
      <if test="serviceCharge != null" >
        service_charge,
      </if>
      <if test="consultingFee != null" >
        consulting_fee,
      </if>
      <if test="prepaymentServiceCharge != null" >
        prepayment_service_charge,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="isValid != null" >
        is_valid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="repaymentPlanId != null" >
        #{repaymentPlanId,jdbcType=BIGINT},
      </if>
      <if test="loanCode != null" >
        #{loanCode,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="periodsTime != null" >
        #{periodsTime,jdbcType=INTEGER},
      </if>
      <if test="loanStartDate != null" >
        #{loanStartDate,jdbcType=DATE},
      </if>
      <if test="repaymentDate != null" >
        #{repaymentDate,jdbcType=DATE},
      </if>
      <if test="realRepaymentDate != null" >
        #{realRepaymentDate,jdbcType=DATE},
      </if>
      <if test="principal != null" >
        #{principal,jdbcType=DECIMAL},
      </if>
      <if test="realPrincipal != null" >
        #{realPrincipal,jdbcType=DECIMAL},
      </if>
      <if test="interest != null" >
        #{interest,jdbcType=DECIMAL},
      </if>
      <if test="serviceCharge != null" >
        #{serviceCharge,jdbcType=DECIMAL},
      </if>
      <if test="consultingFee != null" >
        #{consultingFee,jdbcType=DECIMAL},
      </if>
      <if test="prepaymentServiceCharge != null" >
        #{prepaymentServiceCharge,jdbcType=DECIMAL},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null" >
        #{isValid,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ooteco.entity.repay.model.RepayVOExample" resultType="java.lang.Integer" >
    select count(*) from ath_repay
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ath_repay
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.repaymentPlanId != null" >
        repayment_plan_id = #{record.repaymentPlanId,jdbcType=BIGINT},
      </if>
      <if test="record.loanCode != null" >
        loan_code = #{record.loanCode,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyDate != null" >
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.periodsTime != null" >
        periods_time = #{record.periodsTime,jdbcType=INTEGER},
      </if>
      <if test="record.loanStartDate != null" >
        loan_start_date = #{record.loanStartDate,jdbcType=DATE},
      </if>
      <if test="record.repaymentDate != null" >
        repayment_date = #{record.repaymentDate,jdbcType=DATE},
      </if>
      <if test="record.realRepaymentDate != null" >
        real_repayment_date = #{record.realRepaymentDate,jdbcType=DATE},
      </if>
      <if test="record.principal != null" >
        principal = #{record.principal,jdbcType=DECIMAL},
      </if>
      <if test="record.realPrincipal != null" >
        real_principal = #{record.realPrincipal,jdbcType=DECIMAL},
      </if>
      <if test="record.interest != null" >
        interest = #{record.interest,jdbcType=DECIMAL},
      </if>
      <if test="record.serviceCharge != null" >
        service_charge = #{record.serviceCharge,jdbcType=DECIMAL},
      </if>
      <if test="record.consultingFee != null" >
        consulting_fee = #{record.consultingFee,jdbcType=DECIMAL},
      </if>
      <if test="record.prepaymentServiceCharge != null" >
        prepayment_service_charge = #{record.prepaymentServiceCharge,jdbcType=DECIMAL},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.isValid != null" >
        is_valid = #{record.isValid,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ath_repay
    set id = #{record.id,jdbcType=BIGINT},
      repayment_plan_id = #{record.repaymentPlanId,jdbcType=BIGINT},
      loan_code = #{record.loanCode,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      periods_time = #{record.periodsTime,jdbcType=INTEGER},
      loan_start_date = #{record.loanStartDate,jdbcType=DATE},
      repayment_date = #{record.repaymentDate,jdbcType=DATE},
      real_repayment_date = #{record.realRepaymentDate,jdbcType=DATE},
      principal = #{record.principal,jdbcType=DECIMAL},
      real_principal = #{record.realPrincipal,jdbcType=DECIMAL},
      interest = #{record.interest,jdbcType=DECIMAL},
      service_charge = #{record.serviceCharge,jdbcType=DECIMAL},
      consulting_fee = #{record.consultingFee,jdbcType=DECIMAL},
      prepayment_service_charge = #{record.prepaymentServiceCharge,jdbcType=DECIMAL},
      type = #{record.type,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      is_valid = #{record.isValid,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ooteco.entity.repay.model.RepayVO" >
    update ath_repay
    <set >
      <if test="repaymentPlanId != null" >
        repayment_plan_id = #{repaymentPlanId,jdbcType=BIGINT},
      </if>
      <if test="loanCode != null" >
        loan_code = #{loanCode,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="periodsTime != null" >
        periods_time = #{periodsTime,jdbcType=INTEGER},
      </if>
      <if test="loanStartDate != null" >
        loan_start_date = #{loanStartDate,jdbcType=DATE},
      </if>
      <if test="repaymentDate != null" >
        repayment_date = #{repaymentDate,jdbcType=DATE},
      </if>
      <if test="realRepaymentDate != null" >
        real_repayment_date = #{realRepaymentDate,jdbcType=DATE},
      </if>
      <if test="principal != null" >
        principal = #{principal,jdbcType=DECIMAL},
      </if>
      <if test="realPrincipal != null" >
        real_principal = #{realPrincipal,jdbcType=DECIMAL},
      </if>
      <if test="interest != null" >
        interest = #{interest,jdbcType=DECIMAL},
      </if>
      <if test="serviceCharge != null" >
        service_charge = #{serviceCharge,jdbcType=DECIMAL},
      </if>
      <if test="consultingFee != null" >
        consulting_fee = #{consultingFee,jdbcType=DECIMAL},
      </if>
      <if test="prepaymentServiceCharge != null" >
        prepayment_service_charge = #{prepaymentServiceCharge,jdbcType=DECIMAL},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ooteco.entity.repay.model.RepayVO" >
    update ath_repay
    set repayment_plan_id = #{repaymentPlanId,jdbcType=BIGINT},
      loan_code = #{loanCode,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      periods_time = #{periodsTime,jdbcType=INTEGER},
      loan_start_date = #{loanStartDate,jdbcType=DATE},
      repayment_date = #{repaymentDate,jdbcType=DATE},
      real_repayment_date = #{realRepaymentDate,jdbcType=DATE},
      principal = #{principal,jdbcType=DECIMAL},
      real_principal = #{realPrincipal,jdbcType=DECIMAL},
      interest = #{interest,jdbcType=DECIMAL},
      service_charge = #{serviceCharge,jdbcType=DECIMAL},
      consulting_fee = #{consultingFee,jdbcType=DECIMAL},
      prepayment_service_charge = #{prepaymentServiceCharge,jdbcType=DECIMAL},
      type = #{type,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      is_valid = #{isValid,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>