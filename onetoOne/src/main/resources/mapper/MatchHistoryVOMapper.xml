<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ooteco.dao.mapper.MatchHistoryVOMapper" >
  <resultMap id="BaseResultMap" type="com.ooteco.entity.match.model.MatchHistoryVO" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="modify_date" property="modifyDate" jdbcType="TIMESTAMP" />
    <result column="loan_start_date" property="loanStartDate" jdbcType="DATE" />
    <result column="loan_expire_date" property="loanExpireDate" jdbcType="DATE" />
    <result column="finance_code" property="financeCode" jdbcType="VARCHAR" />
    <result column="finance_user_code" property="financeUserCode" jdbcType="VARCHAR" />
    <result column="repay_id" property="repayId" jdbcType="BIGINT" />
    <result column="repay_split_id" property="repaySplitId" jdbcType="BIGINT" />
    <result column="finance_split_id" property="financeSplitId" jdbcType="BIGINT" />
    <result column="loan_code" property="loanCode" jdbcType="VARCHAR" />
    <result column="loan_rate" property="loanRate" jdbcType="DECIMAL" />
    <result column="loan_user_code" property="loanUserCode" jdbcType="VARCHAR" />
    <result column="allot_amount" property="allotAmount" jdbcType="DECIMAL" />
    <result column="is_recently" property="isRecently" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, create_date, modify_date, loan_start_date, loan_expire_date, finance_code, finance_user_code, 
    repay_id, repay_split_id, finance_split_id, loan_code, loan_rate, loan_user_code, 
    allot_amount, is_recently
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ooteco.entity.match.model.MatchHistoryVOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ath_match_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ath_match_history
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ath_match_history
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ooteco.entity.match.model.MatchHistoryVOExample" >
    delete from ath_match_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ooteco.entity.match.model.MatchHistoryVO" >
    insert into ath_match_history (id, create_date, modify_date, 
      loan_start_date, loan_expire_date, finance_code, 
      finance_user_code, repay_id, repay_split_id, 
      finance_split_id, loan_code, loan_rate, 
      loan_user_code, allot_amount, is_recently
      )
    values (#{id,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, #{modifyDate,jdbcType=TIMESTAMP}, 
      #{loanStartDate,jdbcType=DATE}, #{loanExpireDate,jdbcType=DATE}, #{financeCode,jdbcType=VARCHAR}, 
      #{financeUserCode,jdbcType=VARCHAR}, #{repayId,jdbcType=BIGINT}, #{repaySplitId,jdbcType=BIGINT}, 
      #{financeSplitId,jdbcType=BIGINT}, #{loanCode,jdbcType=VARCHAR}, #{loanRate,jdbcType=DECIMAL}, 
      #{loanUserCode,jdbcType=VARCHAR}, #{allotAmount,jdbcType=DECIMAL}, #{isRecently,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ooteco.entity.match.model.MatchHistoryVO" >
    insert into ath_match_history
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="modifyDate != null" >
        modify_date,
      </if>
      <if test="loanStartDate != null" >
        loan_start_date,
      </if>
      <if test="loanExpireDate != null" >
        loan_expire_date,
      </if>
      <if test="financeCode != null" >
        finance_code,
      </if>
      <if test="financeUserCode != null" >
        finance_user_code,
      </if>
      <if test="repayId != null" >
        repay_id,
      </if>
      <if test="repaySplitId != null" >
        repay_split_id,
      </if>
      <if test="financeSplitId != null" >
        finance_split_id,
      </if>
      <if test="loanCode != null" >
        loan_code,
      </if>
      <if test="loanRate != null" >
        loan_rate,
      </if>
      <if test="loanUserCode != null" >
        loan_user_code,
      </if>
      <if test="allotAmount != null" >
        allot_amount,
      </if>
      <if test="isRecently != null" >
        is_recently,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="loanStartDate != null" >
        #{loanStartDate,jdbcType=DATE},
      </if>
      <if test="loanExpireDate != null" >
        #{loanExpireDate,jdbcType=DATE},
      </if>
      <if test="financeCode != null" >
        #{financeCode,jdbcType=VARCHAR},
      </if>
      <if test="financeUserCode != null" >
        #{financeUserCode,jdbcType=VARCHAR},
      </if>
      <if test="repayId != null" >
        #{repayId,jdbcType=BIGINT},
      </if>
      <if test="repaySplitId != null" >
        #{repaySplitId,jdbcType=BIGINT},
      </if>
      <if test="financeSplitId != null" >
        #{financeSplitId,jdbcType=BIGINT},
      </if>
      <if test="loanCode != null" >
        #{loanCode,jdbcType=VARCHAR},
      </if>
      <if test="loanRate != null" >
        #{loanRate,jdbcType=DECIMAL},
      </if>
      <if test="loanUserCode != null" >
        #{loanUserCode,jdbcType=VARCHAR},
      </if>
      <if test="allotAmount != null" >
        #{allotAmount,jdbcType=DECIMAL},
      </if>
      <if test="isRecently != null" >
        #{isRecently,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ooteco.entity.match.model.MatchHistoryVOExample" resultType="java.lang.Integer" >
    select count(*) from ath_match_history
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ath_match_history
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyDate != null" >
        modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.loanStartDate != null" >
        loan_start_date = #{record.loanStartDate,jdbcType=DATE},
      </if>
      <if test="record.loanExpireDate != null" >
        loan_expire_date = #{record.loanExpireDate,jdbcType=DATE},
      </if>
      <if test="record.financeCode != null" >
        finance_code = #{record.financeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.financeUserCode != null" >
        finance_user_code = #{record.financeUserCode,jdbcType=VARCHAR},
      </if>
      <if test="record.repayId != null" >
        repay_id = #{record.repayId,jdbcType=BIGINT},
      </if>
      <if test="record.repaySplitId != null" >
        repay_split_id = #{record.repaySplitId,jdbcType=BIGINT},
      </if>
      <if test="record.financeSplitId != null" >
        finance_split_id = #{record.financeSplitId,jdbcType=BIGINT},
      </if>
      <if test="record.loanCode != null" >
        loan_code = #{record.loanCode,jdbcType=VARCHAR},
      </if>
      <if test="record.loanRate != null" >
        loan_rate = #{record.loanRate,jdbcType=DECIMAL},
      </if>
      <if test="record.loanUserCode != null" >
        loan_user_code = #{record.loanUserCode,jdbcType=VARCHAR},
      </if>
      <if test="record.allotAmount != null" >
        allot_amount = #{record.allotAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.isRecently != null" >
        is_recently = #{record.isRecently,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ath_match_history
    set id = #{record.id,jdbcType=BIGINT},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      modify_date = #{record.modifyDate,jdbcType=TIMESTAMP},
      loan_start_date = #{record.loanStartDate,jdbcType=DATE},
      loan_expire_date = #{record.loanExpireDate,jdbcType=DATE},
      finance_code = #{record.financeCode,jdbcType=VARCHAR},
      finance_user_code = #{record.financeUserCode,jdbcType=VARCHAR},
      repay_id = #{record.repayId,jdbcType=BIGINT},
      repay_split_id = #{record.repaySplitId,jdbcType=BIGINT},
      finance_split_id = #{record.financeSplitId,jdbcType=BIGINT},
      loan_code = #{record.loanCode,jdbcType=VARCHAR},
      loan_rate = #{record.loanRate,jdbcType=DECIMAL},
      loan_user_code = #{record.loanUserCode,jdbcType=VARCHAR},
      allot_amount = #{record.allotAmount,jdbcType=DECIMAL},
      is_recently = #{record.isRecently,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ooteco.entity.match.model.MatchHistoryVO" >
    update ath_match_history
    <set >
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyDate != null" >
        modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="loanStartDate != null" >
        loan_start_date = #{loanStartDate,jdbcType=DATE},
      </if>
      <if test="loanExpireDate != null" >
        loan_expire_date = #{loanExpireDate,jdbcType=DATE},
      </if>
      <if test="financeCode != null" >
        finance_code = #{financeCode,jdbcType=VARCHAR},
      </if>
      <if test="financeUserCode != null" >
        finance_user_code = #{financeUserCode,jdbcType=VARCHAR},
      </if>
      <if test="repayId != null" >
        repay_id = #{repayId,jdbcType=BIGINT},
      </if>
      <if test="repaySplitId != null" >
        repay_split_id = #{repaySplitId,jdbcType=BIGINT},
      </if>
      <if test="financeSplitId != null" >
        finance_split_id = #{financeSplitId,jdbcType=BIGINT},
      </if>
      <if test="loanCode != null" >
        loan_code = #{loanCode,jdbcType=VARCHAR},
      </if>
      <if test="loanRate != null" >
        loan_rate = #{loanRate,jdbcType=DECIMAL},
      </if>
      <if test="loanUserCode != null" >
        loan_user_code = #{loanUserCode,jdbcType=VARCHAR},
      </if>
      <if test="allotAmount != null" >
        allot_amount = #{allotAmount,jdbcType=DECIMAL},
      </if>
      <if test="isRecently != null" >
        is_recently = #{isRecently,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ooteco.entity.match.model.MatchHistoryVO" >
    update ath_match_history
    set create_date = #{createDate,jdbcType=TIMESTAMP},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      loan_start_date = #{loanStartDate,jdbcType=DATE},
      loan_expire_date = #{loanExpireDate,jdbcType=DATE},
      finance_code = #{financeCode,jdbcType=VARCHAR},
      finance_user_code = #{financeUserCode,jdbcType=VARCHAR},
      repay_id = #{repayId,jdbcType=BIGINT},
      repay_split_id = #{repaySplitId,jdbcType=BIGINT},
      finance_split_id = #{financeSplitId,jdbcType=BIGINT},
      loan_code = #{loanCode,jdbcType=VARCHAR},
      loan_rate = #{loanRate,jdbcType=DECIMAL},
      loan_user_code = #{loanUserCode,jdbcType=VARCHAR},
      allot_amount = #{allotAmount,jdbcType=DECIMAL},
      is_recently = #{isRecently,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>